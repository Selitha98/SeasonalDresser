/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrames;

import Database.DBConnector;
import java.awt.Insets;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Selitha Sasmitha
 */
public class Customers extends javax.swing.JFrame {

    /**
     * Creates new form Customers
     */
    public Customers() {
        initComponents();
                
        update_table();  //Calling the Update table function
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        btnMinimize = new javax.swing.JButton();
        lblBack = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtcustName = new app.bolivia.swing.JCTextField();
        jLabel1 = new javax.swing.JLabel();
        txtcustEmail = new app.bolivia.swing.JCTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnCustAdd = new rojerusan.RSMaterialButtonRectangle();
        txtcustPhone = new app.bolivia.swing.JCTextField();
        jLabel3 = new javax.swing.JLabel();
        txtcustNic = new app.bolivia.swing.JCTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtcustAddress = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        txtCustSearch = new app.bolivia.swing.JCTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableCustomer = new rojeru_san.complementos.RSTableMetro();
        btncustDelete = new rojerusan.RSMaterialButtonRectangle();
        btncustUpdate = new rojerusan.RSMaterialButtonRectangle();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(84, 109, 229));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnClose.setBackground(new java.awt.Color(84, 109, 229));
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Close Set 27 px.png"))); // NOI18N
        btnClose.setAlignmentY(0.0F);
        btnClose.setBorder(null);
        btnClose.setBorderPainted(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 0, 30, 30));

        btnMinimize.setBackground(new java.awt.Color(84, 109, 229));
        btnMinimize.setForeground(new java.awt.Color(255, 255, 255));
        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Minimize Set 27px.png"))); // NOI18N
        btnMinimize.setAlignmentY(0.0F);
        btnMinimize.setBorder(null);
        btnMinimize.setBorderPainted(false);
        btnMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizeActionPerformed(evt);
            }
        });
        jPanel1.add(btnMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 0, 30, 30));

        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Back.png"))); // NOI18N
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackMouseClicked(evt);
            }
        });
        jPanel1.add(lblBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        jLabel6.setFont(new java.awt.Font("Slicker", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Customer");
        jLabel6.setToolTipText("");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 150, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 50));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtcustName.setBackground(new java.awt.Color(51, 51, 51));
        txtcustName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtcustName.setForeground(new java.awt.Color(255, 255, 255));
        txtcustName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcustName.setPhColor(new java.awt.Color(255, 255, 255));
        txtcustName.setPlaceholder("Enter customer name ...");
        jPanel3.add(txtcustName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 260, 30));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Customer Name :");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        txtcustEmail.setBackground(new java.awt.Color(51, 51, 51));
        txtcustEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtcustEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtcustEmail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcustEmail.setPhColor(new java.awt.Color(255, 255, 255));
        txtcustEmail.setPlaceholder("Enter customer email ...");
        jPanel3.add(txtcustEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 260, 30));

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Email :");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Address :");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        btnCustAdd.setText("ADD");
        btnCustAdd.setFont(new java.awt.Font("Slicker", 0, 24)); // NOI18N
        btnCustAdd.setName(""); // NOI18N
        btnCustAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCustAddActionPerformed(evt);
            }
        });
        jPanel3.add(btnCustAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 630, 280, 70));

        txtcustPhone.setBackground(new java.awt.Color(51, 51, 51));
        txtcustPhone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtcustPhone.setForeground(new java.awt.Color(255, 255, 255));
        txtcustPhone.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcustPhone.setPhColor(new java.awt.Color(255, 255, 255));
        txtcustPhone.setPlaceholder("Enter customer phone number ...");
        txtcustPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcustPhoneKeyTyped(evt);
            }
        });
        jPanel3.add(txtcustPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 260, 30));

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Phone :");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        txtcustNic.setBackground(new java.awt.Color(51, 51, 51));
        txtcustNic.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtcustNic.setForeground(new java.awt.Color(255, 255, 255));
        txtcustNic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcustNic.setPhColor(new java.awt.Color(255, 255, 255));
        txtcustNic.setPlaceholder("Enter customer nic number ...");
        txtcustNic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcustNicKeyPressed(evt);
            }
        });
        jPanel3.add(txtcustNic, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 260, 30));

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("NIC :");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        txtcustAddress.setBackground(new java.awt.Color(51, 51, 51));
        txtcustAddress.setColumns(20);
        txtcustAddress.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcustAddress.setForeground(new java.awt.Color(255, 255, 255));
        txtcustAddress.setRows(5);
        txtcustAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        jScrollPane2.setViewportView(txtcustAddress);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 260, 140));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 300, 730));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCustSearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true));
        txtCustSearch.setPlaceholder("Enter customer name ...");
        txtCustSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustSearchKeyReleased(evt);
            }
        });
        jPanel2.add(txtCustSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 1020, -1));

        jtableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "Email", "Phone", "NIC", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableCustomer.setFuenteFilas(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtableCustomer.setFuenteHead(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jtableCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtableCustomer);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 1020, 400));

        btncustDelete.setBackground(new java.awt.Color(51, 51, 51));
        btncustDelete.setText("Delete");
        btncustDelete.setFont(new java.awt.Font("Slicker", 0, 24)); // NOI18N
        btncustDelete.setName(""); // NOI18N
        btncustDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncustDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btncustDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 560, 190, -1));

        btncustUpdate.setBackground(new java.awt.Color(51, 51, 51));
        btncustUpdate.setText("Update");
        btncustUpdate.setFont(new java.awt.Font("Slicker", 0, 24)); // NOI18N
        btncustUpdate.setName(""); // NOI18N
        btncustUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncustUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btncustUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, 190, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 1070, 730));

        setSize(new java.awt.Dimension(1363, 764));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // Close Button
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizeActionPerformed
        // Minimize Button
        this.setExtendedState(ManagerMainMenu.ICONIFIED);
    }//GEN-LAST:event_btnMinimizeActionPerformed

    private void btncustDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncustDeleteActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel d1 = (DefaultTableModel)jtableCustomer.getModel();

        int selectIndex = jtableCustomer.getSelectedRow();

        String Cnic = d1.getValueAt(selectIndex,3).toString();

        int  dialogResult = JOptionPane.showConfirmDialog(this,"Aye you Sure to Delete The Customer?","Warning",JOptionPane.YES_NO_OPTION);

        if(dialogResult == JOptionPane.YES_OPTION)
        {
            try {

                DBConnector dbCon = new DBConnector();
                Connection con = dbCon.getConnection();

                PreparedStatement pst = null;
                pst = con.prepareStatement("DELETE FROM `customer` WHERE `cust_nic`=?");

                pst.setString(1,Cnic);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(this, "Customer Record Deleted");
                update_table();

            } catch (SQLException ex) {
                Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        
    }//GEN-LAST:event_btncustDeleteActionPerformed

    private void btncustUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncustUpdateActionPerformed
        // Updaate cudtomer button codes
        
       DefaultTableModel d1 = (DefaultTableModel)jtableCustomer.getModel();

             try {

            String cust_name = txtcustName.getText();
            String cust_email = txtcustEmail.getText();
            String cust_phone = txtcustPhone.getText();
            String cust_nic = txtcustNic.getText();
            String cust_address = txtcustAddress.getText();
           

            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();

            PreparedStatement pst = null;
            pst = con.prepareStatement("UPDATE `customer` SET `cust_name`=?,`cust_email`=?,`cust_phone`=?,`cust_address`=? WHERE `cust_nic`=?");

            pst.setString(1,cust_name);
            pst.setString(2,cust_email);
            pst.setString(3,cust_phone);
            pst.setString(4,cust_address);
            pst.setString(5,cust_nic);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Customer Details Updated");
            update_table();

        } catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    }//GEN-LAST:event_btncustUpdateActionPerformed

    private void btnCustAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustAddActionPerformed
       //add customer button codes
        
        String name = txtcustName.getText();
        String email = txtcustEmail.getText();
        String phone = txtcustPhone.getText();
        String nic = txtcustNic.getText();
        String address = txtcustAddress.getText();
        
        Pattern p = Pattern.compile("^[0][0-9]{9}$");
        Matcher m = p.matcher(txtcustPhone.getText());
        
        String expression2 = "[A-Za-z0-9]+@+[A-Za-z]+\\.+[A-Za-z]{2,4}+$";
        Pattern p3 = Pattern.compile(expression2);
        Matcher m3 = p3.matcher(txtcustEmail.getText());

            /* **********************************/
            /* Check and validate the input data*/ 
            /* **********************************/
            
            
        if(name.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Insert first name");
        }
        
        else if(!m3.matches())
        {
            JOptionPane.showMessageDialog(null, "Invalid email address");
        }
        
        else if(!m.matches())
        {
            JOptionPane.showMessageDialog(null, "Invalid Phone Number!");
        }
        
        else if(nic.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Insert NIC number");
        }
        
       else if(address.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Insert permanent address");
        }
        
        else if(checkNic(nic))
        {
            JOptionPane.showMessageDialog(null," A Customer Already Exist for this NIC"); // check exiasting emails
        }
        
        else
        {
            PreparedStatement st;
            String query = "INSERT INTO `customer`(`cust_name`, `cust_email`,"
                    + "`cust_phone`, `cust_nic`,`cust_address`) VALUES (?,?,?,?,?)";
      
        try {
            st = DBConnector.getConnection().prepareStatement(query);
            
            st.setString(1, name);
            st.setString(2, email);
            st.setString(3, phone);
            st.setString(4, nic);
            st.setString(5, address);
            
            
            if(st.executeUpdate() > 0)
            {
                JOptionPane.showMessageDialog(null,"New Customer " +name + " Added");
            }
            
            update_table();  //calling Update table function after customer addinng
            
            txtcustNic.setText("");
            txtcustName.setText("");
            txtcustEmail.setText("");
            txtcustPhone.setText("");
            txtcustNic.setText("");
            txtcustAddress.setText("");
           
            
        } catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }    
        
    }//GEN-LAST:event_btnCustAddActionPerformed

    private void jtableCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableCustomerMouseClicked
               
            /* *********************************************************/
            /* Setting the table data to the text fields on mouse click*/ 
            /* *********************************************************/        
                
        DefaultTableModel d1 = (DefaultTableModel)jtableCustomer.getModel();

        int selectIndex = jtableCustomer.getSelectedRow();

        txtcustName.setText(d1.getValueAt(selectIndex, 0).toString());
        txtcustEmail.setText(d1.getValueAt(selectIndex, 1).toString());
        txtcustPhone.setText(d1.getValueAt(selectIndex, 2).toString());
        txtcustNic.setText(d1.getValueAt(selectIndex, 3).toString());
        txtcustAddress.setText(d1.getValueAt(selectIndex, 4).toString());
        
    }//GEN-LAST:event_jtableCustomerMouseClicked

    private void txtCustSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustSearchKeyReleased
            /* *********************************************************/
            /*     Search bar setting filters on key release           */ 
            /* *********************************************************/ 
        
        DefaultTableModel d1 = (DefaultTableModel)jtableCustomer.getModel();
        String search = txtCustSearch.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(d1);
        jtableCustomer.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
    }//GEN-LAST:event_txtCustSearchKeyReleased

    private void txtcustNicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcustNicKeyPressed
        
            /* *********************************************************/
            /*     Update customer details according to the ID number  */ 
            /* *********************************************************/ 
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String C_nic = txtcustNic.getText();
            
            try {
            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();
           
            PreparedStatement pst2 = null;
            pst2 = con.prepareStatement("SELECT * FROM `customer` WHERE `cust_nic`=?");
            pst2.setString(1, C_nic);
            ResultSet rs = pst2.executeQuery();
            
             if(rs.next()==false)
            {
                JOptionPane.showMessageDialog(this, "NIC number Not Found");
            }
            else
            {
                String cusname = rs.getString("cust_name");
                txtcustName.setText(cusname.trim());
                String cusemail = rs.getString("cust_email");
                txtcustEmail.setText(cusemail.trim());
                String cusphone = rs.getString("cust_phone");
                txtcustPhone.setText(cusphone.trim());
                String cusaddress = rs.getString("cust_address");
                txtcustAddress.setText(cusaddress.trim());
                
            }
           
            
            }       
            catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
        }
             
        } 
        
    }//GEN-LAST:event_txtcustNicKeyPressed

    private void lblBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseClicked
        ManagerMainMenu menu = new ManagerMainMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblBackMouseClicked

    private void txtcustPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcustPhoneKeyTyped
            
            /* *********************************************************/
            /* Function not to put charactors into phone number field*/ 
            /* *********************************************************/ 
                        
       char c = evt.getKeyChar();
       if(!Character.isDigit(c))
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtcustPhoneKeyTyped

            /* *********************************************************/
            /* Function to check if the NIC already exists in the database */ 
            /* *********************************************************/ 
    
    public boolean checkNic(String NICcheck)
    {
       PreparedStatement st;
       ResultSet rs;
       boolean check_NIC = false;
       String query = "SELECT * FROM `customer` WHERE `cust_nic` =?";
       
        try 
        {
            st = DBConnector.getConnection().prepareStatement(query);
            st.setString(1,NICcheck);
            
            rs = st.executeQuery();
            
            if(rs.next())
            {
                check_NIC = true;
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
        }
      
        return check_NIC;
       
    }
    
            /* *********************************************************/
            /* **************Update Table Function**********************/ 
            /* *********************************************************/ 
    public void update_table()
    {
        int T;
        
         try {
            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();
           
            PreparedStatement pst = null;
            pst = con.prepareStatement("SELECT * FROM `customer`");
            ResultSet Rs  = pst.executeQuery();
            
            ResultSetMetaData rd = Rs.getMetaData();
            T = rd.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)jtableCustomer.getModel();
            df.setRowCount(0);
            
            while(Rs.next())
            {
                Vector v2 = new Vector();
                for (int i=1; i<=T; i++)
                {
                   v2.add(Rs.getString("cust_name"));
                   v2.add(Rs.getString("cust_email"));
                   v2.add(Rs.getString("cust_phone"));
                   v2.add(Rs.getString("cust_nic"));
                   v2.add(Rs.getString("cust_address"));
                }
                
                df.addRow(v2);
                
            }
          
            
        } catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private rojerusan.RSMaterialButtonRectangle btnCustAdd;
    private javax.swing.JButton btnMinimize;
    private rojerusan.RSMaterialButtonRectangle btncustDelete;
    private rojerusan.RSMaterialButtonRectangle btncustUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private rojeru_san.complementos.RSTableMetro jtableCustomer;
    private javax.swing.JLabel lblBack;
    private app.bolivia.swing.JCTextField txtCustSearch;
    private javax.swing.JTextArea txtcustAddress;
    private app.bolivia.swing.JCTextField txtcustEmail;
    private app.bolivia.swing.JCTextField txtcustName;
    private app.bolivia.swing.JCTextField txtcustNic;
    private app.bolivia.swing.JCTextField txtcustPhone;
    // End of variables declaration//GEN-END:variables
}
