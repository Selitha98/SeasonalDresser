/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrames;

import Database.DBConnector;
import com.toedter.calendar.JDateChooser;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Selitha Sasmitha
 */
public class Rent extends javax.swing.JFrame {

    /**
     * Creates new form Rent
     */
    public Rent() {
        initComponents();
        
        update_table();     //Calling the Update table function
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        btnMinimize = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtsize = new app.bolivia.swing.JCTextField();
        jLabel1 = new javax.swing.JLabel();
        txtcustID = new app.bolivia.swing.JCTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSendemail = new app.bolivia.swing.JCTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPrice = new app.bolivia.swing.JCTextField();
        btnAddRent = new rojerusan.RSMaterialButtonRectangle();
        jLabel8 = new javax.swing.JLabel();
        txtDressName = new app.bolivia.swing.JCTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCustName = new app.bolivia.swing.JCTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtEnddate = new rojeru_san.componentes.RSDateChooser();
        txtStartdate = new rojeru_san.componentes.RSDateChooser();
        txtDressCode = new app.bolivia.swing.JCTextField();
        txtcategory = new app.bolivia.swing.JCTextField();
        jLabel7 = new javax.swing.JLabel();
        txtQty = new app.bolivia.swing.JCTextField();
        txtColor = new app.bolivia.swing.JCTextField();
        jPanel2 = new javax.swing.JPanel();
        txtRentSearch = new app.bolivia.swing.JCTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableRent = new rojeru_san.complementos.RSTableMetro();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(84, 109, 229));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Back.png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        btnMinimize.setBackground(new java.awt.Color(84, 109, 229));
        btnMinimize.setForeground(new java.awt.Color(255, 255, 255));
        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Minimize Set 27px.png"))); // NOI18N
        btnMinimize.setAlignmentY(0.0F);
        btnMinimize.setBorder(null);
        btnMinimize.setBorderPainted(false);
        btnMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizeActionPerformed(evt);
            }
        });
        jPanel1.add(btnMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 0, 30, 30));

        btnClose.setBackground(new java.awt.Color(84, 109, 229));
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Close Set 27 px.png"))); // NOI18N
        btnClose.setAlignmentY(0.0F);
        btnClose.setBorder(null);
        btnClose.setBorderPainted(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 0, 30, 30));

        jLabel12.setFont(new java.awt.Font("Slicker", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Rent Dress");
        jLabel12.setToolTipText("");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 150, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 50));

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtsize.setEditable(false);
        txtsize.setBackground(new java.awt.Color(51, 51, 51));
        txtsize.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtsize.setForeground(new java.awt.Color(255, 255, 255));
        txtsize.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtsize.setPhColor(new java.awt.Color(255, 255, 255));
        txtsize.setPlaceholder("Size ..");
        jPanel3.add(txtsize, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 190, 30));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Dress Code  :");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        txtcustID.setBackground(new java.awt.Color(51, 51, 51));
        txtcustID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtcustID.setForeground(new java.awt.Color(255, 255, 255));
        txtcustID.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcustID.setPhColor(new java.awt.Color(255, 255, 255));
        txtcustID.setPlaceholder("Customer NIC ...");
        txtcustID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcustIDKeyPressed(evt);
            }
        });
        jPanel3.add(txtcustID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 190, 30));

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer ID (NIC) :");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Catogery :");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 80, -1));

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Size :");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 40, -1));

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Colour :");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        txtSendemail.setEditable(false);
        txtSendemail.setBackground(new java.awt.Color(51, 51, 51));
        txtSendemail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(255, 255, 255)));
        txtSendemail.setForeground(new java.awt.Color(51, 51, 51));
        txtSendemail.setPhColor(new java.awt.Color(255, 255, 255));
        jPanel3.add(txtSendemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 690, 190, 30));

        jLabel6.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Price (per day) :");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 100, -1));

        txtPrice.setEditable(false);
        txtPrice.setBackground(new java.awt.Color(51, 51, 51));
        txtPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtPrice.setForeground(new java.awt.Color(255, 255, 255));
        txtPrice.setText("0");
        txtPrice.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtPrice.setPhColor(new java.awt.Color(255, 255, 255));
        txtPrice.setPlaceholder("Price ..");
        jPanel3.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 200, 30));

        btnAddRent.setText("Rent");
        btnAddRent.setFont(new java.awt.Font("Slicker", 0, 24)); // NOI18N
        btnAddRent.setName(""); // NOI18N
        btnAddRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRentActionPerformed(evt);
            }
        });
        jPanel3.add(btnAddRent, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 540, 280, 70));

        jLabel8.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Dress Name  :");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, -1, -1));

        txtDressName.setEditable(false);
        txtDressName.setBackground(new java.awt.Color(51, 51, 51));
        txtDressName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtDressName.setForeground(new java.awt.Color(255, 255, 255));
        txtDressName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtDressName.setPhColor(new java.awt.Color(255, 255, 255));
        txtDressName.setPlaceholder("Dress name..");
        jPanel3.add(txtDressName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 190, 30));

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Customer Name :");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));

        txtCustName.setEditable(false);
        txtCustName.setBackground(new java.awt.Color(51, 51, 51));
        txtCustName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtCustName.setForeground(new java.awt.Color(255, 255, 255));
        txtCustName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCustName.setPhColor(new java.awt.Color(255, 255, 255));
        txtCustName.setPlaceholder("Customer name..");
        jPanel3.add(txtCustName, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 200, 30));

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Start-Date :");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        jLabel11.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("End-Date :");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 90, -1));

        txtEnddate.setForeground(new java.awt.Color(255, 255, 255));
        txtEnddate.setColorBackground(new java.awt.Color(51, 51, 51));
        txtEnddate.setColorForeground(new java.awt.Color(51, 51, 51));
        txtEnddate.setPlaceholder("Select end date");
        jPanel3.add(txtEnddate, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 410, 200, 30));

        txtStartdate.setForeground(new java.awt.Color(255, 255, 255));
        txtStartdate.setColorBackground(new java.awt.Color(51, 51, 51));
        txtStartdate.setColorForeground(new java.awt.Color(51, 51, 51));
        txtStartdate.setPlaceholder("Select start date");
        jPanel3.add(txtStartdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 200, 30));

        txtDressCode.setBackground(new java.awt.Color(51, 51, 51));
        txtDressCode.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtDressCode.setForeground(new java.awt.Color(255, 255, 255));
        txtDressCode.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtDressCode.setPhColor(new java.awt.Color(255, 255, 255));
        txtDressCode.setPlaceholder("Dress code ...");
        txtDressCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDressCodeKeyPressed(evt);
            }
        });
        jPanel3.add(txtDressCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 90, 30));

        txtcategory.setEditable(false);
        txtcategory.setBackground(new java.awt.Color(51, 51, 51));
        txtcategory.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtcategory.setForeground(new java.awt.Color(255, 255, 255));
        txtcategory.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcategory.setPhColor(new java.awt.Color(255, 255, 255));
        txtcategory.setPlaceholder("Catogery ..");
        jPanel3.add(txtcategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 190, 30));

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Stock :");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, -1, -1));

        txtQty.setEditable(false);
        txtQty.setBackground(new java.awt.Color(51, 51, 51));
        txtQty.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        txtQty.setForeground(new java.awt.Color(255, 255, 255));
        txtQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQty.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtQty.setPhColor(new java.awt.Color(255, 255, 255));
        txtQty.setPlaceholder("QTY...");
        jPanel3.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 50, 30));

        txtColor.setEditable(false);
        txtColor.setBackground(new java.awt.Color(51, 51, 51));
        txtColor.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtColor.setForeground(new java.awt.Color(255, 255, 255));
        txtColor.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtColor.setPhColor(new java.awt.Color(255, 255, 255));
        txtColor.setPlaceholder("Colour ..");
        jPanel3.add(txtColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 190, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 490, 730));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRentSearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true));
        txtRentSearch.setPlaceholder("Enter rent item ...");
        txtRentSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRentSearchKeyReleased(evt);
            }
        });
        jPanel2.add(txtRentSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 830, -1));

        jtableRent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Name", "Dress Code", "Dress Name", "Price (Per-Day)", "Start Date", "Due Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableRent.setFuenteFilas(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtableRent.setFuenteHead(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jScrollPane1.setViewportView(jtableRent);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 830, 400));

        jLabel13.setFont(new java.awt.Font("Slicker", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("On Going Rentals");
        jLabel13.setToolTipText("");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 250, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 50, 880, 730));

        setSize(new java.awt.Dimension(1363, 764));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        ManagerMainMenu menu = new ManagerMainMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel15MouseClicked

    private void txtDressCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDressCodeKeyPressed
        
        //Load the items from dress table for the given dress ID
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String dressID = txtDressCode.getText();

            try {
                DBConnector dbCon = new DBConnector();
                Connection con = dbCon.getConnection();

                PreparedStatement pst2 = null;
                pst2 = con.prepareStatement("SELECT * FROM `dress` WHERE `dress_code`=?");
                pst2.setString(1, dressID);
                ResultSet rs = pst2.executeQuery();

                if(rs.next()==false)
                {
                    JOptionPane.showMessageDialog(this, "Dress Not Found");
                }
                                        
                else 
                {
                    String dressName = rs.getString("dress_name");
                    txtDressName.setText(dressName.trim());
                    String category = rs.getString("category");
                    txtcategory.setText(category.trim());
                    String size = rs.getString("size");
                    txtsize.setText(size.trim());
                    String qty = rs.getString("quantity");
                    txtQty.setText(qty.trim());
                    String color = rs.getString("colour");
                    txtColor.setText(color.trim());
                    String price = rs.getString("price");
                    txtPrice.setText(price.trim());
                    
                    if(qty.equals("0"))
                    {
                        JOptionPane.showMessageDialog(this, "No Stock Available");
                        btnAddRent.setVisible(false);
                        JOptionPane.showMessageDialog(this, "No Stock Available");
                    }
                    
                    else 
                     {
                        btnAddRent.setVisible(true);
                     }

                }

            }
            catch (SQLException ex) {
                Logger.getLogger(Rent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtDressCodeKeyPressed

    private void txtcustIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcustIDKeyPressed

        //Load the details of the cutomers for the given customer ID
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String cusid = txtcustID.getText();

            try {
                DBConnector dbCon = new DBConnector();
                Connection con = dbCon.getConnection();

                PreparedStatement pst1 = null;
                pst1 = con.prepareStatement("SELECT * FROM `customer` WHERE `cust_nic`=?");
                pst1.setString(1, cusid);
                ResultSet rs = pst1.executeQuery();

                if(rs.next()==false)
                {
                    JOptionPane.showMessageDialog(this, "NIC number Not Found");
                }
                else
                {
                    String cusname = rs.getString("cust_name");
                    txtCustName.setText(cusname.trim());
                    
                    String email = rs.getString("cust_email");
                    txtSendemail.setText(email.trim());

                }

            }
            catch (SQLException ex) {
                Logger.getLogger(Rent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtcustIDKeyPressed

    private void btnAddRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRentActionPerformed
        //Add button codes
        
        String custid = txtcustID.getText();
        String custname = txtCustName.getText();
        String dresscode = txtDressCode.getText();
        String dressname = txtDressName.getText();
        String dresscategory = txtcategory.getText();
        String dresssize = txtsize.getText();
        String dresscolor = txtSendemail.getText();
        int dressprice = Integer.parseInt(txtPrice.getText());
        
        /*
        Date start_date = txtStartdate.getDatoFecha();
        Date end_date = txtEnddate.getDatoFecha();
        
        Long l1 = start_date.getTime();
        long l2 = end_date.getTime();
        
        java.sql.Date sql_start_date = new java.sql.Date(l1);
        java.sql.Date sql_end_date = new java.sql.Date(l2);
        */
        
       
       
        SimpleDateFormat Date_Format1 = new SimpleDateFormat("yyyy-MM-dd");
        String start_date = Date_Format1.format(txtStartdate.getDatoFecha());
        
        SimpleDateFormat Date_Format2 = new SimpleDateFormat("yyyy-MM-dd");
        String end_date = Date_Format2.format(txtEnddate.getDatoFecha());
        
        /* *********************************************************/
        /* ***************** Field Validations *********************/ 
        /* *********************************************************/  
        
        
        if(custid.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Insert A Customer ID");
        }
        
        else if(custname.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Insert Customer Name");
        }
        
        else if(dresscode.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Insert a Dress Code");
        }
        else if(start_date.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Insert a Valid date");
        }
        else if(end_date.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Insert a Valid date");
        }
                
        else {
  
        try {
            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();
           
            PreparedStatement pst = null;
            pst = con.prepareStatement("INSERT INTO `rent`(`custId`, `custName`, `dressCode`,`dressName`, `category`, `size`, `color`, `price`, `st_date`, `end_date`) VALUES (?,?,?,?,?,?,?,?,?,?)");
            
            pst.setString(1, custid);
            pst.setString(2, custname);
            pst.setString(3, dresscode);
            pst.setString(4, dressname);
            pst.setString(5, dresscategory);
            pst.setString(6, dresssize); 
            pst.setString(7, dresscolor); 
            pst.setInt(8, dressprice); 
            pst.setString(9, start_date);
            pst.setString(10, end_date);
            //pst.setDate(9, sql_start_date);
            //pst.setDate(10, sql_end_date);
            pst.executeUpdate();
   
                       
            
            PreparedStatement pst2 = null;
            pst2 = con.prepareStatement("UPDATE `dress` SET `quantity`= (quantity - 1) WHERE `dress_code`=?");
            
            pst2.setString(1, dresscode);
            pst2.executeUpdate();
            update_table();
            JOptionPane.showMessageDialog(this, "Rent Success");  
            JOptionPane.showMessageDialog(this, "wait few seconds to send the email");  
            
        /* *********************************************************/
        /* ************* Send Email Notification function **********/ 
        /* *********************************************************/  
            
            String MYEMAIL = "seasonaldreaaser@gmail.com"; // Your Email
            String MYPASSWORD = "Seasonal123"; // password for email
            String TOEMAIL = txtSendemail.getText();
            String MYSUBJECT = "Rental Confirmation !";
            String MYMESSAGE = "Dear Mr/Ms" + txtCustName.getText() + "\n\n\n You have succesfully rented the below item from Seasonal Dresser Shop."
                + "\n\n\n Dress Code\t: " + txtDressCode.getText() +"\n Dress Name\t: " + txtDressName.getText() 
               + "\n Category\t: " + txtcategory.getText() + "\n Size\t: " + txtsize.getText() 
                + "\n Colour\t: " + txtColor.getText() + "\n Price(per day) Rs.\t: " + txtPrice.getText()  + "\n\n Please make sure return to the item on or before  " + end_date + "\n\n * Please note that delaying the returen on time will cause to calculate a fine additional to the rental fee.";
        
        String DATA = new Rent().sendMail(MYEMAIL,MYPASSWORD,TOEMAIL,MYSUBJECT,MYMESSAGE);
        System.out.println(DATA);
        
            if (DATA.equals("true")) {
                System.out.println("Email send succesfull");
                JOptionPane.showMessageDialog(this, "Email send succesfull");
            
            }else 
            {
                System.out.println("Email sent Failed !");
                JOptionPane.showMessageDialog(this, "Email sent Failed !");
            }
      
            txtDressCode.setText("");
            txtDressName.setText("");
            txtQty.setText("");
            txtcategory.setText("");
            txtsize.setText("");
            txtColor.setText("");
            txtPrice.setText("");
            
            JDateChooser dateChooser = new JDateChooser();
            dateChooser.setCalendar(null);
            
           
            
        }       
            catch (SQLException ex) {
            Logger.getLogger(Rent.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        }
        
        
    }//GEN-LAST:event_btnAddRentActionPerformed

    private void txtRentSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRentSearchKeyReleased
        //search txt field codes
        
        DefaultTableModel d1 = (DefaultTableModel)jtableRent.getModel();
        String search = txtRentSearch.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(d1);
        jtableRent.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_txtRentSearchKeyReleased

    private void btnMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizeActionPerformed
        // Minimize Button
        this.setExtendedState(ManagerMainMenu.ICONIFIED);
    }//GEN-LAST:event_btnMinimizeActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // Close Button
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

        /* *********************************************************/
        /* ******************Update Table function******************/ 
        /* *********************************************************/  
    
    public void update_table()
    {
        int c;
        
         try {
            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();
           
            PreparedStatement pst = null;
            pst = con.prepareStatement("SELECT * FROM `rent`");
            ResultSet Rs  = pst.executeQuery();
            
            ResultSetMetaData rd = Rs.getMetaData();
            c = rd.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)jtableRent.getModel();
            df.setRowCount(0);
            
            while(Rs.next())
            {
                Vector v2 = new Vector();
                for (int i=1; i<=c; i++)
                {
                   v2.add(Rs.getString("custId"));
                   v2.add(Rs.getString("custName"));
                   v2.add(Rs.getString("dressCode"));
                   v2.add(Rs.getString("dressName"));
                   v2.add(Rs.getInt("price"));
                   v2.add(Rs.getDate("st_date"));
                   v2.add(Rs.getDate("end_date"));
                   
                }
                
                df.addRow(v2);
                
            }
          
            
        } catch (SQLException ex) {
            Logger.getLogger(Dresses.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 
        /* *********************************************************/
        /* ***************** Send Email Function *******************/ 
        /* *********************************************************/  
    
    public String sendMail(String myAcc, String pass, String toEmail, String Subject, String Text){
        
     String msg;
     
    
    final String myAccname = myAcc;
    final String myPass = pass;
    final String recEMAIL = toEmail;
     
    Properties properties = new Properties ();
     
     properties.put("mail.smtp.auth", true);
     properties.put("mail.smtp.starttls.enable", true);
     properties.put("mail.smtp.host", "smtp.gmail.com");
     properties.put("mail.smtp.port", "587");
     properties.setProperty("mail.smtp.ssl.trust", "smtp.gmail.com");
     
     
     
     Session session = Session.getInstance(properties, new Authenticator() 
     {
         @Override
         protected PasswordAuthentication getPasswordAuthentication() {
              return new PasswordAuthentication(myAcc, pass);
         }
         
     });
     
        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(myAcc));
            message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(toEmail));
            message.setSubject(Subject);
            message.setText(Text);
            Transport.send(message);
            msg = "true";
            return msg;
            
        } catch (Exception e) {
            return e.toString();
        }
     
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle btnAddRent;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnMinimize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private rojeru_san.complementos.RSTableMetro jtableRent;
    private app.bolivia.swing.JCTextField txtColor;
    private app.bolivia.swing.JCTextField txtCustName;
    private app.bolivia.swing.JCTextField txtDressCode;
    private app.bolivia.swing.JCTextField txtDressName;
    private rojeru_san.componentes.RSDateChooser txtEnddate;
    private app.bolivia.swing.JCTextField txtPrice;
    private app.bolivia.swing.JCTextField txtQty;
    private app.bolivia.swing.JCTextField txtRentSearch;
    private app.bolivia.swing.JCTextField txtSendemail;
    private rojeru_san.componentes.RSDateChooser txtStartdate;
    private app.bolivia.swing.JCTextField txtcategory;
    private app.bolivia.swing.JCTextField txtcustID;
    private app.bolivia.swing.JCTextField txtsize;
    // End of variables declaration//GEN-END:variables
}
