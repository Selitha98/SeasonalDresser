/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrames;

import Database.DBConnector;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Selitha Sasmitha
 */
public class Payment extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Payment() {
        initComponents();
        
        update_table();   //Calling the Update table function
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        txtdressCode = new app.bolivia.swing.JCTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnPay = new rojerusan.RSMaterialButtonRectangle();
        txtcustID = new app.bolivia.swing.JCTextField();
        jLabel3 = new javax.swing.JLabel();
        txtrentDate = new app.bolivia.swing.JCTextField();
        txtreturnDate = new app.bolivia.swing.JCTextField();
        jLabel4 = new javax.swing.JLabel();
        txtrentFee = new app.bolivia.swing.JCTextField();
        jLabel6 = new javax.swing.JLabel();
        txtpaid = new app.bolivia.swing.JCTextField();
        txtbalance = new app.bolivia.swing.JCTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txttotalDays = new app.bolivia.swing.JCTextField();
        txtoverdueDays = new app.bolivia.swing.JCTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtcustName = new app.bolivia.swing.JCTextField();
        txtdressName = new app.bolivia.swing.JCTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtfine = new app.bolivia.swing.JCTextField();
        jLabel14 = new javax.swing.JLabel();
        txttotalFee = new app.bolivia.swing.JCTextField();
        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JLabel();
        btnMinimize = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtsearchReturn = new app.bolivia.swing.JCTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtablePayment = new rojeru_san.complementos.RSTableMetro();
        btnPrintBill = new rojerusan.RSMaterialButtonRectangle();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtdressCode.setBackground(new java.awt.Color(51, 51, 51));
        txtdressCode.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtdressCode.setForeground(new java.awt.Color(255, 255, 255));
        txtdressCode.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtdressCode.setPhColor(new java.awt.Color(255, 255, 255));
        txtdressCode.setPlaceholder("Item code ...");
        jPanel3.add(txtdressCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 100, 30));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Dress Code  :");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer ID :");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        btnPay.setText("Pay");
        btnPay.setFont(new java.awt.Font("Slicker", 0, 24)); // NOI18N
        btnPay.setName(""); // NOI18N
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        jPanel3.add(btnPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 650, 180, 60));

        txtcustID.setBackground(new java.awt.Color(51, 51, 51));
        txtcustID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtcustID.setForeground(new java.awt.Color(255, 255, 255));
        txtcustID.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcustID.setPhColor(new java.awt.Color(255, 255, 255));
        txtcustID.setPlaceholder("Customer id ...");
        txtcustID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcustIDKeyPressed(evt);
            }
        });
        jPanel3.add(txtcustID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 100, 30));

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Rent Date :");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        txtrentDate.setEditable(false);
        txtrentDate.setBackground(new java.awt.Color(51, 51, 51));
        txtrentDate.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txtrentDate.setForeground(new java.awt.Color(255, 255, 255));
        txtrentDate.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtrentDate.setPhColor(new java.awt.Color(255, 255, 255));
        txtrentDate.setPlaceholder("Rent date ...");
        jPanel3.add(txtrentDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 240, 30));

        txtreturnDate.setEditable(false);
        txtreturnDate.setBackground(new java.awt.Color(51, 51, 51));
        txtreturnDate.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txtreturnDate.setForeground(new java.awt.Color(255, 255, 255));
        txtreturnDate.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtreturnDate.setPhColor(new java.awt.Color(255, 255, 255));
        txtreturnDate.setPlaceholder("Return date ...");
        jPanel3.add(txtreturnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 240, 30));

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Return Date :");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        txtrentFee.setEditable(false);
        txtrentFee.setBackground(new java.awt.Color(51, 51, 51));
        txtrentFee.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txtrentFee.setForeground(new java.awt.Color(255, 255, 255));
        txtrentFee.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtrentFee.setPhColor(new java.awt.Color(255, 255, 255));
        txtrentFee.setPlaceholder("Rent fee ...");
        jPanel3.add(txtrentFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 100, 30));

        jLabel6.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Paid :");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, -1, -1));

        txtpaid.setBackground(new java.awt.Color(51, 51, 51));
        txtpaid.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txtpaid.setForeground(new java.awt.Color(255, 255, 255));
        txtpaid.setText("0.0");
        txtpaid.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtpaid.setPhColor(new java.awt.Color(255, 255, 255));
        txtpaid.setPlaceholder("Paid ...");
        txtpaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpaidActionPerformed(evt);
            }
        });
        txtpaid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpaidKeyTyped(evt);
            }
        });
        jPanel3.add(txtpaid, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 240, 30));

        txtbalance.setEditable(false);
        txtbalance.setBackground(new java.awt.Color(51, 51, 51));
        txtbalance.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txtbalance.setForeground(new java.awt.Color(255, 255, 255));
        txtbalance.setText("0.0");
        txtbalance.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtbalance.setPhColor(new java.awt.Color(255, 255, 255));
        txtbalance.setPlaceholder("Balance ...");
        jPanel3.add(txtbalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 610, 240, 30));

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Balance :");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 590, -1, -1));

        jLabel8.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total  Days :");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        txttotalDays.setEditable(false);
        txttotalDays.setBackground(new java.awt.Color(51, 51, 51));
        txttotalDays.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txttotalDays.setForeground(new java.awt.Color(255, 255, 255));
        txttotalDays.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txttotalDays.setPhColor(new java.awt.Color(255, 255, 255));
        txttotalDays.setPlaceholder("Total days ...");
        jPanel3.add(txttotalDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 100, 30));

        txtoverdueDays.setEditable(false);
        txtoverdueDays.setBackground(new java.awt.Color(51, 51, 51));
        txtoverdueDays.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txtoverdueDays.setForeground(new java.awt.Color(255, 255, 255));
        txtoverdueDays.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtoverdueDays.setPhColor(new java.awt.Color(255, 255, 255));
        txtoverdueDays.setPlaceholder("Overdue days ...");
        jPanel3.add(txtoverdueDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 110, 30));

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Overdue Days :");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, -1, -1));

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Customer Name :");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        txtcustName.setEditable(false);
        txtcustName.setBackground(new java.awt.Color(51, 51, 51));
        txtcustName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtcustName.setForeground(new java.awt.Color(255, 255, 255));
        txtcustName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtcustName.setPhColor(new java.awt.Color(255, 255, 255));
        txtcustName.setPlaceholder("Customer name ...");
        jPanel3.add(txtcustName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 120, 30));

        txtdressName.setEditable(false);
        txtdressName.setBackground(new java.awt.Color(51, 51, 51));
        txtdressName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        txtdressName.setForeground(new java.awt.Color(255, 255, 255));
        txtdressName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtdressName.setPhColor(new java.awt.Color(255, 255, 255));
        txtdressName.setPlaceholder("Item name ...");
        jPanel3.add(txtdressName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 120, 30));

        jLabel11.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Dress Name:");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        jLabel12.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Rent Fee :");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        jLabel13.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Fine :");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, -1, -1));

        txtfine.setEditable(false);
        txtfine.setBackground(new java.awt.Color(51, 51, 51));
        txtfine.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txtfine.setForeground(new java.awt.Color(255, 255, 255));
        txtfine.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtfine.setPhColor(new java.awt.Color(255, 255, 255));
        txtfine.setPlaceholder("Fine ...");
        jPanel3.add(txtfine, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 110, 30));

        jLabel14.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Total Fee :");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, -1));

        txttotalFee.setEditable(false);
        txttotalFee.setBackground(new java.awt.Color(51, 51, 51));
        txttotalFee.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        txttotalFee.setForeground(new java.awt.Color(255, 255, 255));
        txttotalFee.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txttotalFee.setPhColor(new java.awt.Color(255, 255, 255));
        txttotalFee.setPlaceholder("Total fee ...");
        jPanel3.add(txttotalFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 240, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 270, 780));

        jPanel1.setBackground(new java.awt.Color(84, 109, 229));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Back.png"))); // NOI18N
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackMouseClicked(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        btnMinimize.setBackground(new java.awt.Color(84, 109, 229));
        btnMinimize.setForeground(new java.awt.Color(255, 255, 255));
        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Minimize Set 27px.png"))); // NOI18N
        btnMinimize.setAlignmentY(0.0F);
        btnMinimize.setBorder(null);
        btnMinimize.setBorderPainted(false);
        btnMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizeActionPerformed(evt);
            }
        });
        jPanel1.add(btnMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 0, 30, 30));

        btnClose.setBackground(new java.awt.Color(84, 109, 229));
        btnClose.setForeground(new java.awt.Color(255, 255, 255));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons used in this project/icons/Close Set 27 px.png"))); // NOI18N
        btnClose.setAlignmentY(0.0F);
        btnClose.setBorder(null);
        btnClose.setBorderPainted(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 0, 30, 30));

        jLabel15.setFont(new java.awt.Font("Slicker", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Payment");
        jLabel15.setToolTipText("");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 150, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 50));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtsearchReturn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true));
        txtsearchReturn.setPlaceholder("Enter rent item ...");
        txtsearchReturn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchReturnKeyReleased(evt);
            }
        });
        jPanel2.add(txtsearchReturn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 1050, -1));

        jtablePayment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Customer Name", "Item Code", "Item Name", "Rent Date", "Return Date", "Total Days", "Overdue", "Rent Fee", "Fine"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtablePayment.setFuenteFilas(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtablePayment.setFuenteHead(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jtablePayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtablePaymentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtablePayment);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 1050, 470));

        btnPrintBill.setBackground(new java.awt.Color(51, 51, 51));
        btnPrintBill.setText("Print Bill");
        btnPrintBill.setFont(new java.awt.Font("Slicker", 0, 24)); // NOI18N
        btnPrintBill.setName(""); // NOI18N
        btnPrintBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintBillActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrintBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 610, 220, -1));

        jLabel16.setFont(new java.awt.Font("Slicker", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Pending Payments");
        jLabel16.setToolTipText("");
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 250, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 1100, 780));

        setSize(new java.awt.Dimension(1363, 764));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
      //Payment button codes
        
        String custid = txtcustID.getText();
        String custname = txtcustName.getText();
        String dresscode = txtdressCode.getText();
        String dressname = txtdressName.getText();
        String rentdate = txtrentDate.getText();
        String rtndate = txtreturnDate.getText();
        Integer totaldays = Integer.parseInt(txttotalDays.getText());
        Integer overduedays = Integer.parseInt(txtoverdueDays.getText());
        double rentfee = Double.parseDouble(txtrentFee.getText());
        double fine = Double.parseDouble(txtfine.getText());
        double totfee = Double.parseDouble(txttotalFee.getText());
        double paid = Double.parseDouble(txtpaid.getText());
        double bal = Double.parseDouble(txtbalance.getText());
        
        /* *********************************************************/
        /* *********** Validation for the  fields *************/ 
        /* *********************************************************/ 
        
        if(paid == 0.0)
        {
            JOptionPane.showMessageDialog(null,"Insert Paid amount to make payments");
        }
        
        else if (totfee == paid)
        {         
                   
            try {
            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();
           
            PreparedStatement pst = null;
            pst = con.prepareStatement("INSERT INTO `payment`(`cust_id`, `custname`, `dress_code`,`dress_name`, `rent_date`, "
                    + "`return_date`, `totdays`, `overduedays`, `rentfee`, `fine`, `totalfee`, `paidamount`, `balamount`)"
                    + " VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
            
            pst.setString(1, custid);
            pst.setString(2, custname);
            pst.setString(3, dresscode);
            pst.setString(4, dressname);
            pst.setString(5, rentdate);
            pst.setString(6, rtndate); 
            pst.setInt(7, totaldays); 
            pst.setInt(8, overduedays); 
            pst.setDouble(9, rentfee);
            pst.setDouble(10, fine);
            pst.setDouble(11, totfee);
            pst.setDouble(12, paid);
            pst.setDouble(13, bal);
            pst.executeUpdate();
            
            PreparedStatement pst3 = null;
            pst3 = con.prepareStatement("DELETE FROM `return_dress` WHERE `c_id`=? AND `d_code`=? ");
            pst3.setString(1, custid);
            pst3.setString(2, dresscode);
            pst3.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Payment Successful");
            update_table();
           }       
            catch (SQLException ex) {
            Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
        else if (bal == 0.0)
        {
            JOptionPane.showMessageDialog(null,"Calculate Balance before make payments");
        }
        else {
        
        
        try {
            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();
           
            PreparedStatement pst = null;
            pst = con.prepareStatement("INSERT INTO `payment`(`cust_id`, `custname`, `dress_code`,`dress_name`, `rent_date`, "
                    + "`return_date`, `totdays`, `overduedays`, `rentfee`, `fine`, `totalfee`, `paidamount`, `balamount`)"
                    + " VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)");
            
            pst.setString(1, custid);
            pst.setString(2, custname);
            pst.setString(3, dresscode);
            pst.setString(4, dressname);
            pst.setString(5, rentdate);
            pst.setString(6, rtndate); 
            pst.setInt(7, totaldays); 
            pst.setInt(8, overduedays); 
            pst.setDouble(9, rentfee);
            pst.setDouble(10, fine);
            pst.setDouble(11, totfee);
            pst.setDouble(12, paid);
            pst.setDouble(13, bal);
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Payment Successful");
            
            PreparedStatement pst3 = null;
            pst3 = con.prepareStatement("DELETE FROM `return_dress` WHERE `c_id`=? AND `d_code`=? ");
            pst3.setString(1, custid);
            pst3.setString(2, dresscode);
            pst3.executeUpdate();
            
            update_table();
            
           }       
            catch (SQLException ex) {
            Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnPrintBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintBillActionPerformed
        
        //Print bill jasper report function
        try {
            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();
              
            Statement stmt = con.createStatement();  
            
            ResultSet rs = stmt.executeQuery("Select Max(Invoice_no)from payment");
            rs.next();
            String lastID = rs.getString( "Max(Invoice_no)");
                 
        
        HashMap mash = new HashMap();
        mash.put("Invoice_no",lastID);
        
            JasperDesign jdesign = JRXmlLoader.load("C:\\Users\\Thisara Sandaruwan\\Desktop\\test\\Rental_Management_System\\src\\JFrames\\printbill.jrxml");
            JasperReport ireport = JasperCompileManager.compileReport(jdesign);
            JasperPrint jprint = JasperFillManager.fillReport(ireport, mash,con);
            
            //JasperViewer.viewReport(jprint);      //Directly show the invoice as preview
            
            JasperPrintManager.printReport(jprint, false);  //Directly print the invoice without preview
            
            
        
        } catch (SQLException ex) {
            Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JRException ex) {
            Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnPrintBillActionPerformed

    private void btnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseClicked
        ManagerMainMenu menu = new ManagerMainMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackMouseClicked

    private void jtablePaymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtablePaymentMouseClicked
        //update text fileds when mouse clicked on the table
        
        DefaultTableModel d2 = (DefaultTableModel)jtablePayment.getModel();
        int selectIndex = jtablePayment.getSelectedRow();
        
        txtcustID.setText(d2.getValueAt(selectIndex, 0).toString());
        txtcustName.setText(d2.getValueAt(selectIndex, 1).toString());
        txtdressCode.setText(d2.getValueAt(selectIndex, 2).toString());
        txtdressName.setText(d2.getValueAt(selectIndex, 3).toString());
        txtrentDate.setText(d2.getValueAt(selectIndex, 4).toString());
        txtreturnDate.setText(d2.getValueAt(selectIndex, 5).toString());
        txttotalDays.setText(d2.getValueAt(selectIndex, 6).toString());
        txtoverdueDays.setText(d2.getValueAt(selectIndex, 7).toString());
        txtrentFee.setText(d2.getValueAt(selectIndex, 8).toString());
        txtfine.setText(d2.getValueAt(selectIndex, 9).toString());
        
        Double total = Double.parseDouble(txtrentFee.getText()) + Double.parseDouble(txtfine.getText());
        txttotalFee.setText(String.valueOf(total));
        
        txtpaid.setText("0.0");
        txtbalance.setText("0");
        
    }//GEN-LAST:event_jtablePaymentMouseClicked

    private void txtsearchReturnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchReturnKeyReleased
       //show results when text entered
       
        DefaultTableModel d1 = (DefaultTableModel)jtablePayment.getModel();
        String search = txtsearchReturn.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(d1);
        jtablePayment.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_txtsearchReturnKeyReleased

    private void txtcustIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcustIDKeyPressed
        //load the details related to the rent based on the customer id
        
         if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String cusid = txtcustID.getText();

            try {
                DBConnector dbCon = new DBConnector();
                Connection con = dbCon.getConnection();

                PreparedStatement pst1 = null;
                pst1 = con.prepareStatement("SELECT * FROM `return_dress` WHERE `c_id`=?");
                pst1.setString(1, cusid);
                ResultSet rs = pst1.executeQuery();

                if(rs.next()==false)
                {
                    JOptionPane.showMessageDialog(this, "No Records Found for NIC Number");
                }
                else
                {
                    String cusname = rs.getString("c_name");
                    txtcustName.setText(cusname.trim());
                    String dresscode  = rs.getString("d_code");
                    txtdressCode.setText(dresscode.trim());
                    String dressname  = rs.getString("d_name");
                    txtdressName.setText(dressname.trim());
                    String  stdate = rs.getString("st_date");
                    txtrentDate.setText(stdate.trim());
                    String rtndate  = rs.getString("current_date");
                    txtreturnDate.setText(rtndate.trim());
                    String totdays  = rs.getString("tot_days");
                    txttotalDays.setText(totdays.trim());
                    String overduedays  = rs.getString("overdue_days");
                    txtoverdueDays.setText(overduedays.trim());
                    String rentfee  = rs.getString("total");
                    txtrentFee.setText(rentfee.trim());
                    String fine  = rs.getString("fine");
                    txtfine.setText(fine.trim());
                                       
                    Double total = Double.parseDouble(txtrentFee.getText()) + Double.parseDouble(txtfine.getText());
                    txttotalFee.setText(String.valueOf(total));
                    txtpaid.setText("0.0");
                    txtbalance.setText("0");
                }

            }
            catch (SQLException ex) {
                Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                               
    }//GEN-LAST:event_txtcustIDKeyPressed

    private void txtpaidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpaidKeyTyped
       char c = evt.getKeyChar();
       if(!Character.isDigit(c))
        {
            evt.consume();
           
        }
    }//GEN-LAST:event_txtpaidKeyTyped

    private void txtpaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpaidActionPerformed
       
        /*Balance calculation*/
       
        Double Tot = Double.parseDouble(txttotalFee.getText().trim());
        Double Paid = Double.parseDouble(txtpaid.getText().trim());
        
        if(Paid < Tot)
        {
            JOptionPane.showMessageDialog(null,"Paid Amount is Less than the total");
            txtbalance.setText("0");
            txtpaid.setText(Double.toString(0.0));
        }
        else if(Paid > Tot)
        {
        Double Bal = (Paid - Tot);
        txtbalance.setText(Double.toString(Bal));
        }
        else //(Tot.equals(Paid))
        {
        Double Bal = (0.0);
        txtbalance.setText(Double.toString(Bal));
        }
    }//GEN-LAST:event_txtpaidActionPerformed

    private void btnMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizeActionPerformed
        // Minimize Button
        this.setExtendedState(ManagerMainMenu.ICONIFIED);
    }//GEN-LAST:event_btnMinimizeActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // Close Button
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

        /* *********************************************************/
        /* ******************Update Table function******************/ 
        /* *********************************************************/  
    
    public void update_table()
    {
        int c;
        
         try {
            DBConnector dbCon = new DBConnector();
            Connection con = dbCon.getConnection();
           
            PreparedStatement pst = null;
            pst = con.prepareStatement("SELECT * FROM `return_dress`");
            ResultSet Rs  = pst.executeQuery();
            
            ResultSetMetaData rd = Rs.getMetaData();
            c = rd.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)jtablePayment.getModel();
            df.setRowCount(0);
            
            while(Rs.next())
            {
                Vector v2 = new Vector();
                for (int i=1; i<=c; i++)
                {
                   v2.add(Rs.getString("c_id"));
                   v2.add(Rs.getString("c_name"));
                   v2.add(Rs.getString("d_code"));
                   v2.add(Rs.getString("d_name"));
                   v2.add(Rs.getString("st_date"));
                   v2.add(Rs.getString("current_date"));
                   v2.add(Rs.getInt("tot_days"));
                   v2.add(Rs.getInt("overdue_days"));
                   v2.add(Rs.getDouble("total"));
                   v2.add(Rs.getDouble("fine"));
                }
                
                df.addRow(v2);
                
            }
          
            
        } catch (SQLException ex) {
            Logger.getLogger(Payment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnBack;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnMinimize;
    private rojerusan.RSMaterialButtonRectangle btnPay;
    private rojerusan.RSMaterialButtonRectangle btnPrintBill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private rojeru_san.complementos.RSTableMetro jtablePayment;
    private app.bolivia.swing.JCTextField txtbalance;
    private app.bolivia.swing.JCTextField txtcustID;
    private app.bolivia.swing.JCTextField txtcustName;
    private app.bolivia.swing.JCTextField txtdressCode;
    private app.bolivia.swing.JCTextField txtdressName;
    private app.bolivia.swing.JCTextField txtfine;
    private app.bolivia.swing.JCTextField txtoverdueDays;
    private app.bolivia.swing.JCTextField txtpaid;
    private app.bolivia.swing.JCTextField txtrentDate;
    private app.bolivia.swing.JCTextField txtrentFee;
    private app.bolivia.swing.JCTextField txtreturnDate;
    private app.bolivia.swing.JCTextField txtsearchReturn;
    private app.bolivia.swing.JCTextField txttotalDays;
    private app.bolivia.swing.JCTextField txttotalFee;
    // End of variables declaration//GEN-END:variables
}
